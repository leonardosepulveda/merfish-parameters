{
    "analysis_tasks": [
        {
            "task": "MachineLearningSegment",
            "module": "merlin.analysis.segment",
            "parameters": {
                "warp_task": "FiducialCorrelationWarp",
                "global_align_task": "SimpleGlobalAlignment",
                "compartment_channel_name": "DAPI",
                "diameter": 50
            }
        },
        {
            "task": "CleanCellBoundaries",
            "module": "merlin.analysis.segment",
            "analysis_name": "CleanCellBoundariesCellpose",
            "parameters": {
                "segment_task": "MachineLearningSegment",
                "global_align_task": "SimpleGlobalAlignment"
            }
        },
        {
            "task": "CombineCleanedBoundaries",
            "module": "merlin.analysis.segment",
            "analysis_name": "CombineCleanedBoundariesCellpose",
            "parameters": {
                "cleaning_task": "CleanCellBoundaries"
            }
        },
        {
            "task": "RefineCellDatabases",
            "module": "merlin.analysis.segment",
            "analysis_name": "RefineCellDatabasesCellpose",
            "parameters": {
                "segment_task": "MachineLearningSegment",
                "combine_cleaning_task": "CombineCleanedBoundaries"
            }
        },
        {
            "task": "ExportCellMetadata",
            "module": "merlin.analysis.segment",
            "analysis_name": "ExportCellMetadataCellpose",
            "parameters": {
                "segment_task": "RefineCellDatabases"
            }
        },
        {
            "task": "PartitionBarcodes",
            "module": "merlin.analysis.partition",
            "analysis_name": "PartitionBarcodesCellpose",
            "parameters": {
                "filter_task": "AdaptiveFilterBarcodes",
                "assignment_task": "RefineCellDatabases",
                "alignment_task": "SimpleGlobalAlignment"
            }
        },
        {
            "task": "ExportPartitionedBarcodes",
            "module": "merlin.analysis.partition",
            "analysis_name": "ExportPartitionedBarcodesCellpose",
            "parameters": {
                "partition_task": "PartitionBarcodes"
            }
        },
        {
            "task": "SlurmReport",
            "module": "merlin.analysis.slurmreport",
            "analysis_name": "SlurmReport",
            "parameters": {
                "run_after_task": "ExportPartitionedBarcodes"
            }
        }    
    ]
}
